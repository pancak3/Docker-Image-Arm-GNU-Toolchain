# Base
FROM debian:stable-slim AS base

# APT
FROM base AS apt
RUN apt-get update
RUN apt-get install -y wget
RUN apt-get install -y curl

# Builder
## Ref: https://developer.arm.com/downloads/-/arm-gnu-toolchain-downloads
##      see "Building Linux hosted toolchain from sources using Linaro's ABE"
##      of "Release Note for Downloads 12.2.MPACBTI-Bet1"
FROM apt AS builder
WORKDIR /workspace
RUN wget --https-only \
    "https://raw.githubusercontent.com/git/git/master/contrib/workdir/git-new-workdir" \
    -O /usr/local/bin/git-new-workdir \
    && chmod +x /usr/local/bin/git-new-workdir
RUN apt-get install -y git
RUN apt-get install -y gcc
RUN apt-get install -y flex
RUN apt-get install -y bison
RUN apt-get install -y autogen
RUN apt-get install -y texinfo
RUN apt-get install -y gawk
RUN apt-get install -y libncurses5-dev
RUN apt-get install -y python3-dev
RUN apt-get install -y zlib1g-dev
RUN apt-get install -y dejagnu
RUN apt-get install -y autoconf
RUN apt-get install -y automake
RUN apt-get install -y libtool
RUN apt-get install -y build-essential
RUN apt-get install -y rsync
RUN ln -s /usr/bin/python3 /usr/bin/python

RUN git clone https://git.linaro.org/toolchain/abe.git
WORKDIR /workspace/build
RUN wget --https-only \
    "https://developer.arm.com/-/media/Files/downloads/gnu/12.2.mpacbti-bet1/manifest/arm-gnu-toolchain-arm-none-eabi-abe-manifest.txt"
RUN ../abe/configure
RUN ../abe/abe.sh \
    --manifest arm-gnu-toolchain-arm-none-eabi-abe-manifest.txt \
    --build all

## newlib_nano
WORKDIR /workspace/build_newlib
RUN git clone https://git.linaro.org/toolchain/abe.git
RUN abe/configure
RUN wget --https-only \
    "https://developer.arm.com/-/media/Files/downloads/gnu/12.2.mpacbti-bet1/manifest/arm-gnu-toolchain-arm-none-eabi-nano-abe-manifest.txt"
RUN abe/abe.sh \
    --manifest arm-gnu-toolchain-arm-none-eabi-nano-abe-manifest.txt \
    --build all
RUN cd .. \
    && wget --https-only \
    "https://developer.arm.com/-/media/Files/downloads/gnu/12.2.mpacbti-bet1/manifest/copy_nano_libraries.sh" | sh
WORKDIR /workspace/build

# # main
# FROM base AS main
# COPY --from=builder /usr/bin/aarch64* /usr/bin/

ENTRYPOINT [ "bash", "-l"]
